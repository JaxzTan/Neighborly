import { jsx as _jsx } from "react/jsx-runtime";
import { makePolymediaUrl, makeSuiscanUrl, makeSuivisionUrl, shortenAddress, } from "@polymedia/suitcase-core";
// === components ===
/**
 * An external link like:
 * `<a target='_blank' rel='noopener noreferrer nofollow' href={href}>{text}</a>`
 */
export const LinkExternal = ({ follow = true, children, ...props }) => {
    const target = props.target ?? "_blank";
    const rel = props.rel ?? `noopener noreferrer ${follow ? "" : "nofollow"}`;
    return _jsx("a", { ...props, target: target, rel: rel, children: children });
};
/**
 * A link to a Sui explorer (Polymedia, Suiscan, or SuiVision).
 */
export const LinkToExplorer = ({ explorer, network, kind, addr, html = {}, children = null, }) => {
    let makeUrl;
    if (explorer === "Polymedia") {
        makeUrl = makePolymediaUrl;
    }
    else if (explorer === "Suiscan") {
        makeUrl = makeSuiscanUrl;
    }
    else if (explorer === "SuiVision") {
        makeUrl = makeSuivisionUrl;
    }
    else {
        throw new Error(`Unknown explorer: ${explorer}`);
    }
    html.href = makeUrl(network, kind, addr);
    return _jsx(LinkExternal, { ...html, children: children || shortenAddress(addr) });
};
/**
 * Higher-Order Component to create external links for explorers.
 */
const createExplorerLinkComponent = (makeUrl) => {
    return ({ network, kind, addr, html = {}, children = null, }) => {
        html.href = makeUrl(network, kind, addr);
        return _jsx(LinkExternal, { ...html, children: children || shortenAddress(addr) });
    };
};
/**
 * A link to explorer.polymedia.app.
 */
export const LinkToPolymedia = createExplorerLinkComponent(makePolymediaUrl);
/**
 * A link to suiscan.xyz.
 */
export const LinkToSuiscan = createExplorerLinkComponent(makeSuiscanUrl);
/**
 * A link to suivision.xyz.
 */
export const LinkToSuivision = createExplorerLinkComponent(makeSuivisionUrl);
//# sourceMappingURL=links.js.map