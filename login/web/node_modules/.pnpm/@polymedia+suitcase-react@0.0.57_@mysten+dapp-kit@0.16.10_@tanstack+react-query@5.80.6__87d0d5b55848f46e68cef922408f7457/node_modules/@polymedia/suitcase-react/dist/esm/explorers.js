import { jsx as _jsx } from "react/jsx-runtime";
import { RadioSelector } from "./selectors";
export const EXPLORER_NAMES = ["Polymedia", "Suiscan", "SuiVision"];
/**
 * A radio button menu to select a Sui explorer and save the choice to local storage.
 */
export const ExplorerRadioSelector = ({ selectedExplorer, onSwitch, className = "", }) => {
    const options = EXPLORER_NAMES.map(explorer => ({
        value: explorer,
        label: explorer
    }));
    const onSelect = (newExplorer) => {
        switchExplorer(newExplorer, onSwitch);
    };
    return (_jsx(RadioSelector, { options: options, selectedValue: selectedExplorer, onSelect: onSelect, className: `poly-explorer-radio-selector ${className}` }));
};
/**
 * Load the chosen Sui explorer name from local storage.
 */
export function loadExplorer(defaultExplorer) {
    if (!isExplorerName(defaultExplorer)) {
        throw new Error(`Explorer not supported: ${defaultExplorer}`);
    }
    const explorer = localStorage.getItem("polymedia.explorer");
    if (isExplorerName(explorer)) {
        return explorer;
    }
    localStorage.setItem("polymedia.explorer", defaultExplorer);
    return defaultExplorer;
}
/**
 * Change the chosen Sui explorer, update local storage, and optionally trigger a callback.
 */
export function switchExplorer(newExplorer, onSwitch) {
    if (!isExplorerName(newExplorer)) {
        throw new Error(`Explorer not supported: ${newExplorer}`);
    }
    localStorage.setItem("polymedia.explorer", newExplorer);
    if (onSwitch) {
        onSwitch(newExplorer);
    }
    else {
        window.location.reload();
    }
}
function isExplorerName(value) {
    return value !== null && EXPLORER_NAMES.includes(value);
}
//# sourceMappingURL=explorers.js.map