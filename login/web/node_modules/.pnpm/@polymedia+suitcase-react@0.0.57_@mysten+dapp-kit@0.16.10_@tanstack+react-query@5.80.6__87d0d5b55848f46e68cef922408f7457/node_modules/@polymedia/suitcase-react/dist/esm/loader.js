import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { CardMsg, CardSpinner } from "./cards";
export const Loader = ({ name, fetch, children }) => {
    if (fetch.err !== null)
        return _jsx(CardMsg, { children: fetch.err });
    if (fetch.isLoading || fetch.data === undefined)
        return _jsx(CardSpinner, {});
    if (fetch.data === null)
        return _jsxs(CardMsg, { children: [name, " not found"] });
    return _jsx(_Fragment, { children: children(fetch.data) });
};
export const LoaderPaginated = ({ fetch, children, msgErr, msgEmpty, }) => {
    if (fetch.err !== null)
        return _jsx(CardMsg, { children: msgErr ?? fetch.err });
    if (fetch.page.length === 0) {
        return fetch.isLoading
            ? _jsx(CardSpinner, {})
            : _jsx(CardMsg, { children: msgEmpty ?? "None found" });
    }
    return _jsx(_Fragment, { children: children(fetch) });
};
//# sourceMappingURL=loader.js.map