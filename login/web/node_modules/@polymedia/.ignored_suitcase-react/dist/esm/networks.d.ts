export type BaseNetworkName = string;
/**
 * A radio button menu to select a Sui network and save the choice to local storage.
 */
export declare function NetworkRadioSelector<NetworkName extends BaseNetworkName>(props: {
    selectedNetwork: NetworkName;
    supportedNetworks: readonly NetworkName[];
    onSwitch: (newNetwork: NetworkName) => void;
    className?: string;
}): import("react/jsx-runtime").JSX.Element;
/**
 * A dropdown menu to choose between mainnet/testnet/devnet/localnet.
 */
export declare function NetworkDropdownSelector<NetworkName extends BaseNetworkName>(props: {
    currentNetwork: NetworkName;
    supportedNetworks: readonly NetworkName[];
    onSwitch?: (newNetwork: NetworkName) => void;
    disabled?: boolean;
    className?: string;
    id?: string;
}): import("react/jsx-runtime").JSX.Element;
/**
 * Check if the current hostname is a localhost environment.
 */
export declare function isLocalhost(): boolean;
/**
 * Load the network name based on URL parameters and local storage.
 */
export declare function loadNetwork<NetworkName extends BaseNetworkName>(supportedNetworks: readonly NetworkName[], defaultNetwork: NetworkName): NetworkName;
/**
 * Change networks, update local storage, and optionally trigger a callback.
 */
export declare function switchNetwork<NetworkName extends BaseNetworkName>(newNetwork: NetworkName, supportedNetworks: readonly NetworkName[], onSwitch?: (newNetwork: NetworkName) => void): void;
